# -*- coding: utf-8 -*-
"""ds . confusion matrix

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1t2K4hd2U1l3ddIMgHFnfjdVN7UCzWMuq
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.linear_model import LogisticRegression
from sklearn import preprocessing
df=pd.read_csv("/content/Social_Network_Ads.csv")
print(df)

from sklearn import preprocessing
le=preprocessing.LabelEncoder()
df['Gender']=le.fit_transform(df['Gender'])
print(df)

y = df['Purchased'].values
x = df[['Gender','Age','EstimatedSalary']]
print(y)
print(x)

x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=0)
logreg = LogisticRegression()
logreg.fit(x_train, y_train)
Y_pred = logreg.predict(x_test)

print(Y_test)
print(Y_pred)

from sklearn import metrics
cnf_metrix = metrics.confusion_matrix(Y_test,Y_pred)
print(cnf_metrix)

# Commented out IPython magic to ensure Python compatibility.
import seaborn as sns
import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
# %matplotlib inline

import pandas as pd
# %matplotlib inline

class_names=[0,1]
fig, ax = plt.subplots()
tick_marks = np.arange(len(class_names))
plt.xticks(tick_marks, class_names)
plt.yticks(tick_marks, class_names)
sns.heatmap(pd.DataFrame(cnf_metrix), annot=True, cmap="YlGnBu" ,fmt='g')
ax.xaxis.set_label_position("top")
plt.tight_layout()
plt.title('Confusion matrix', y=1.1)
plt.ylabel('Actual label')
plt.xlabel('Predicted label')